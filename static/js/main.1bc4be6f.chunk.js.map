{"version":3,"sources":["Components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","Components/Search.js","Components/Card.js","pages/Home.js","pages/About.js","Components/Repos.js","pages/Profile.js","Components/Alert.js","context/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/githubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","gitHub","placeholder","onKeyPress","event","key","clearUsers","trim","hide","search","show","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","Fragment","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","public_repos","public_gists","following","style","width","Alert","type","role","text","class","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1bc4be6f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nexport const Navbar = () => (\r\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n    <div className=\"navbar-brand\">GitHub поиск</div>\r\n\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink exact to=\"/\" className=\"nav-link\">\r\n          Главная\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink to=\"/about\" className=\"nav-link\">\r\n          Информация\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink to=\"/profile\" className=\"nav-link\">\r\n          Профиль\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n","import { createContext } from \"react\";\r\nexport const AlertContext = createContext();\r\n","import { createContext } from \"react\";\r\nexport const GithubContext = createContext();\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"./../context/alert/alertContext\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Search = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const alert = useContext(AlertContext);\r\n  const gitHub = useContext(GithubContext);\r\n  const onSubmit = event => {\r\n    if (event.key !== \"Enter\") {\r\n      return;\r\n    }\r\n    gitHub.clearUsers();\r\n    if (value.trim()) {\r\n      alert.hide();\r\n      gitHub.search(value.trim());\r\n    } else {\r\n      alert.show(\"Введите данные пользователя\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        className=\"form-control\"\r\n        placeholder=\"Введите ник пользователя...\"\r\n        onKeyPress={onSubmit}\r\n        value={value}\r\n        onChange={event => setValue(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const Card = ({ user }) => (\r\n  <div className=\"card\">\r\n    <img src={user.avatar_url} className=\"card-img-top\" alt={user.login} />\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{user.login}</h5>\r\n      <Link to={\"/profile/\" + user.login} className=\"btn btn-primary\">\r\n        Открыть\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { Search } from \"../Components/Search\";\r\nimport { Card } from \"../Components/Card\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Home = () => {\r\n  const { loading, users } = useContext(GithubContext);\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          <p className=\"text-center\">Загрузка...</p>\r\n        ) : (\r\n          users.map(user => (\r\n            <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n              <Card user={user} />\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Информация</h1>\r\n        <p className=\"lead\">\r\n          Версия приложения: <strong>1.0.0</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Repos = ({ repos }) => (\r\n  <React.Fragment>\r\n    {repos.map(repo => (\r\n      <div className=\"card mb-3\" key={repo.id}>\r\n        <div className=\"card-body\">\r\n          <h5>\r\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {repo.name}\r\n            </a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </React.Fragment>\r\n);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Repos } from \"../Components/Repos\";\r\n\r\nexport const Profile = ({ match }) => {\r\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\r\n  const urlName = match.params.name;\r\n\r\n  useEffect(() => {\r\n    getUser(urlName);\r\n    getRepos(urlName);\r\n  }, []);\r\n  if (loading) {\r\n    return <p className=\"text-center\">Загрузка....</p>;\r\n  }\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    public_repos,\r\n    public_gists,\r\n    following\r\n  } = user;\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/\" className=\"btn btn-link\">\r\n        На главную\r\n      </Link>\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img src={avatar_url} alt={name} style={{ width: 200 }} />\r\n              <h1>{name}</h1>\r\n              {location && <p>Местоположение: {location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {bio && (\r\n                <React.Fragment>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </React.Fragment>\r\n              )}\r\n              <a\r\n                href={html_url}\r\n                className=\"btn btn-dark mb-4\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Открыть профиль\r\n              </a>\r\n              <ul>\r\n                {login && (\r\n                  <li>\r\n                    <strong>Username:</strong> {login}\r\n                  </li>\r\n                )}\r\n                {company && (\r\n                  <li>\r\n                    <strong>Компания:</strong> {company}\r\n                  </li>\r\n                )}\r\n                {blog && (\r\n                  <li>\r\n                    <strong>Website:</strong> {blog}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <div className=\"badge badge-primary mr-4 p-2\">\r\n                Подписчики: {followers}\r\n              </div>\r\n              <div className=\"badge badge-success mr-4 p-2\">\r\n                Подписан: {following}\r\n              </div>\r\n              <div className=\"badge badge-info mr-4 p-2\">\r\n                Репозитории: {public_repos}\r\n              </div>\r\n              <div className=\"badge badge-dark p-2\">Gists: {public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"mb-4\">Последние 5 репозиториев:</h2>\r\n\r\n      <Repos repos={repos} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AlertContext } from \"./../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n  if (!alert) return null;\r\n  return (\r\n    <div\r\n      className={`alert alert-${alert.type || \"secondary\"} alert-dismissible`}\r\n      role=\"alert\"\r\n    >\r\n      {alert.text}\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" onClick={hide}>\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"./types\";\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: state => state\r\n};\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\n\r\nexport const CLEAR_USER = \"CLEAR_USER\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\n","import React, { useReducer } from \"react\";\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer } from \"./../alertReducer\";\r\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, null);\r\n  const hide = () => {\r\n    dispatch({ type: HIDE_ALERT });\r\n  };\r\n  const show = (text, type = \"secondary\") => {\r\n    dispatch({ type: SHOW_ALERT, payload: { type, text } });\r\n  };\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        hide,\r\n        show,\r\n        alert: state\r\n      }}\r\n    >\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import { SEARCH_USERS, GET_REPOS, GET_USER, CLEAR_USER } from \"../types\";\r\nimport { SET_LOADING } from \"./../types\";\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, { payload }) => ({\r\n    ...state,\r\n    users: payload,\r\n    loading: false\r\n  }),\r\n  [GET_REPOS]: (state, { payload }) => ({\r\n    ...state,\r\n    repos: payload,\r\n    loading: false\r\n  }),\r\n  [GET_USER]: (state, { payload }) => ({\r\n    ...state,\r\n    user: payload,\r\n    loading: false\r\n  }),\r\n  [SET_LOADING]: (state, { payload }) => ({\r\n    ...state,\r\n    loading: false\r\n  }),\r\n  [CLEAR_USER]: (state, { payload }) => ({\r\n    ...state,\r\n    users: []\r\n  }),\r\n  DEFAULT: state => state\r\n};\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { GithubContext } from \"./githubContext\";\r\nimport { githubReducer } from \"./githubReducer\";\r\nimport {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  CLEAR_USER,\r\n  SET_LOADING\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nconst withCreds = url => {\r\n  return `${url}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n};\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: []\r\n  };\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n  const search = async value => {\r\n    setLoading();\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: response.data.items\r\n    });\r\n  };\r\n  const getUser = async name => {\r\n    setLoading();\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    );\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: response.data\r\n    });\r\n  };\r\n  const getRepos = async name => {\r\n    setLoading();\r\n    const response = await axios.get(\r\n      `https://api.github.com/users/${name}/repos?per_page=5&`\r\n    );\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: response.data\r\n    });\r\n  };\r\n  const clearUsers = () => dispatch({ type: CLEAR_USER });\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n  const { user, users, repos, loading } = state;\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        setLoading,\r\n        search,\r\n        getUser,\r\n        getRepos,\r\n        clearUsers,\r\n        user,\r\n        users,\r\n        repos,\r\n        loading\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Navbar } from \"./Components/Navbar\";\nimport { Home } from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { About } from \"./pages/About\";\nimport { Profile } from \"./pages/Profile\";\nimport { Alert } from \"./Components/Alert\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { GithubState } from \"./context/github/githubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: \"Text alert\" }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}